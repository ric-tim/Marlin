1- Principe des modifications
------------------------------
RT 30.07.2013 1° version

Marlin_main.cpp  interpréte le gcode
 Pour G2 et G3 
 ->  appel mc_arc() contenu dans motion_control.cpp
   -> Modifications de motion_control.cpp
		a) une fois le centre calculé décision :
			- on ne fait rien s'il n'est pas dans la fourchette 95-105
			  le slicer Slic3r positionne le centre aux coordonnées 100 100
			  (CENTER_X,CENTER_Y,DELTA_CENTER dans Configuration.h)
			  découpage en segments et remplissage du buffer par plan_buffer_line()
			- on remplace plan_buffer_line() par plan_buffer_arc()
	-> Modification de planner.cpp		
		b) planner.cpp gère le buffer des commandes à envoyer aux moteurs
			- il reçoit normalement et traite plan_buffer_line()
			  en calculant le nombre de pas que les moteurs doivent faire
			- J'ai ajouté la routine plan_buffer_arc()
			  là il faudra calculer le nombre de pas à effectuer en rotation,
				--> évaluer axis_steps_per_unit[R_AXIS]
			  je ne touche pour l'instant pas à X et à Y dans cette opération,
			  je fais comme si Z pouvait bouger...
			  à ce stade on dispose des coordonnées du centre, de l'angle à effectuer
			  de la longueur du chemin à parcourir et des coordonnées du point à atteindre
			  (mise à jour des valeurs de X et Y sans toucher les moteurs ;-)
	-> Modification de stepper.cpp		  
		c) stepper.cpp reçoit les commandes et doit faire tourner les moteurs et régler la vitesse en fonction du
     		nombre de pas à effectuer. Il y a tout un savant calcul des accélérations, je ne
            m'en suis pas occupé pour l'instant. 			